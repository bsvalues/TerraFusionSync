modules = ["python-3.11", "postgresql-16", "nodejs-20", "python3"]

[nix]
channel = "stable-24_05"
packages = ["cargo", "cyrus_sasl", "geos", "glibcLocales", "jq", "libxcrypt", "libyaml", "nats-server", "openldap", "openssl", "postgresql", "postgresql_16", "rustc", "unixODBC"]

[deployment]
deploymentTarget = "autoscale"
run = ["sh", "-c", "gunicorn --bind 0.0.0.0:5000 main:app"]
build = ["sh", "-c", "python -m pip install -r requirements.txt"]

[workflows]
runButton = "Run API Gateway"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "syncservice"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app"
waitForPort = 5000

[[workflows.workflow]]
name = "syncservice"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python run_syncservice_workflow_8080.py"
waitForPort = 8080

[[workflows.workflow]]
name = "Run API Gateway"
author = 37274620
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -m pip install -r requirements.txt"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 main:app --reload --timeout 120"

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5001
externalPort = 3002

[[ports]]
localPort = 8080
externalPort = 8080

[[ports]]
localPort = 8081
externalPort = 8081

[[ports]]
localPort = 8083
externalPort = 3000

[[ports]]
localPort = 8090
externalPort = 3001
