name: GIS Export Plugin Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'terrafusion_sync/plugins/gis_export/**'
      - 'tests/plugins/*gis_export*'
      - '.github/workflows/gis-export-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'terrafusion_sync/plugins/gis_export/**'
      - 'tests/plugins/*gis_export*'
      - '.github/workflows/gis-export-tests.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    name: Run GIS Export Plugin Tests
    runs-on: ubuntu-latest
    
    services:
      # Start PostgreSQL service
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: terrafusion_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov
      
      - name: Run GIS Export Plugin Tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/terrafusion_test
          TEST_ENV: ci
        run: |
          # Run the tests
          python -m pytest tests/plugins/fixed_test_gis_export_end_to_end.py -v --cov=terrafusion_sync/plugins/gis_export
      
      - name: Run Simple API Tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/terrafusion_test
          TEST_ENV: ci
        run: |
          # Start the SyncService in the background
          python run_syncservice.py &
          # Wait for the service to start
          sleep 5
          # Run the API tests
          python run_gis_export_api_test.py --test health
          python run_gis_export_api_test.py --test create
          # Cleanup
          pkill -f "python run_syncservice.py" || true
      
      - name: Generate coverage report
        run: |
          python -m pytest --cov=terrafusion_sync/plugins/gis_export --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: gis-export-plugin
          name: codecov-gis-export
          fail_ci_if_error: false